import { FishFoodService } from '../../utils/fish-food';

export default {
    customId: 'buy_fish_food_modal',
    run: async ({ interaction }) => {
        try {
            const quantityInput = interaction.fields.getTextInputValue('food_quantity_input');
            
            // Validate quantity
            const quantity = parseInt(quantityInput);
            if (isNaN(quantity) || quantity <= 0 || quantity > 100) {
                await interaction.reply({ 
                    content: '‚ùå S·ªë l∆∞·ª£ng ph·∫£i t·ª´ 1-100!', 
                    ephemeral: true 
                });
                return;
            }

            // L·∫•y th√¥ng tin th·ª©c ƒÉn t·ª´ customId
            const customIdParts = interaction.customId.split(':');
            const foodType = customIdParts[1];
            
            if (!foodType) {
                await interaction.reply({ 
                    content: '‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin th·ª©c ƒÉn!', 
                    ephemeral: true 
                });
                return;
            }

            const userId = interaction.user.id;
            const guildId = interaction.guildId!;

            // Mua th·ª©c ƒÉn
            const result = await FishFoodService.buyFishFood(userId, guildId, foodType, quantity);
            
            if (result.success) {
                const embed = new (await import('discord.js')).EmbedBuilder()
                    .setTitle("‚úÖ Mua Th·ª©c ƒÇn Th√†nh C√¥ng!")
                    .setColor("#00ff00")
                    .setDescription(`ƒê√£ mua **${quantity}x ${result.foodInfo.name}**`)
                    .addFields(
                        { name: "üí∞ Gi√°", value: `${result.totalCost.toLocaleString()} coins`, inline: true },
                        { name: "üçΩÔ∏è Exp Bonus", value: `+${result.foodInfo.expBonus} exp/l·∫ßn`, inline: true },
                        { name: "üì¶ S·ªë l∆∞·ª£ng", value: `${quantity}`, inline: true }
                    )
                    .setTimestamp();

                await interaction.reply({ 
                    embeds: [embed], 
                    ephemeral: true 
                });
            } else {
                await interaction.reply({ 
                    content: `‚ùå ${result.error}`, 
                    ephemeral: true 
                });
            }
            
        } catch (error) {
            console.error('Error handling buy fish food modal:', error);
            await interaction.reply({ 
                content: '‚ùå C√≥ l·ªói x·∫£y ra khi mua th·ª©c ƒÉn!', 
                ephemeral: true 
            });
        }
    }
}; 