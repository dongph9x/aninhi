export interface SpamProtectionConfig {
  enabled: boolean;
  cooldown: number; // Th·ªùi gian ch·ªù gi·ªØa c√°c l·∫ßn c√¢u c√° (gi√¢y)
  maxAttempts: number; // S·ªë l·∫ßn t·ªëi ƒëa trong kho·∫£ng th·ªùi gian
  timeWindow: number; // Kho·∫£ng th·ªùi gian t√≠nh spam (gi√¢y)
  warningThreshold: number; // S·ªë l·∫ßn vi ph·∫°m tr∆∞·ªõc khi c·∫£nh c√°o
  banThreshold: number; // S·ªë l·∫ßn vi ph·∫°m tr∆∞·ªõc khi ban
  // Tool spam detection
  toolSpamDetection: {
    enabled: boolean;
    minAttempts: number; // S·ªë l·∫ßn t·ªëi thi·ªÉu ƒë·ªÉ ph√°t hi·ªán tool spam
    timeTolerance: number; // ƒê·ªô sai s·ªë cho ph√©p (gi√¢y)
    patternThreshold: number; // S·ªë l·∫ßn pattern gi·ªëng nhau ƒë·ªÉ coi l√† tool spam
    banDuration: number; // Th·ªùi gian ban cho tool spam (ph√∫t)
  };
  // Extended spam monitoring
  extendedSpamMonitoring: {
    enabled: boolean;
    timeWindow: number; // Kho·∫£ng th·ªùi gian theo d√µi (gi√¢y) - 5 ph√∫t = 300s
    maxAttempts: number; // S·ªë l·∫ßn t·ªëi ƒëa trong timeWindow - 20 l·∫ßn
    warningThreshold: number; // S·ªë l·∫ßn vi ph·∫°m tr∆∞·ªõc khi c·∫£nh c√°o
    banThreshold: number; // S·ªë l·∫ßn vi ph·∫°m tr∆∞·ªõc khi ban
    banDuration: number; // Th·ªùi gian ban (ph√∫t)
    // K·∫øt h·ª£p tool spam detection
    frequencyDetection: {
      enabled: boolean;
      minAttempts: number; // S·ªë l·∫ßn t·ªëi thi·ªÉu ƒë·ªÉ ph√°t hi·ªán frequency spam
      timeTolerance: number; // ƒê·ªô sai s·ªë cho ph√©p (gi√¢y) - 2s
      patternThreshold: number; // S·ªë l·∫ßn pattern gi·ªëng nhau ƒë·ªÉ coi l√† frequency spam
    };
  };
}

export interface SpamRecord {
  userId: string;
  guildId: string;
  command: string;
  timestamp: number;
  attempts: number;
  warnings: number;
  isBanned: boolean;
  banExpiresAt?: number;
  // Tool spam detection
  timeIntervals: number[]; // Th·ªùi gian gi·ªØa c√°c l·∫ßn th·ª≠
  toolSpamWarnings: number; // S·ªë l·∫ßn c·∫£nh c√°o tool spam
  isToolSpamBanned: boolean; // B·ªã ban do tool spam
  toolSpamBanExpiresAt?: number; // Th·ªùi gian h·∫øt h·∫°n ban tool spam
  // Extended spam monitoring
  extendedAttempts: number; // S·ªë l·∫ßn th·ª≠ trong extended timeWindow
  extendedWarnings: number; // S·ªë l·∫ßn c·∫£nh c√°o extended spam
  isExtendedSpamBanned: boolean; // B·ªã ban do extended spam
  extendedSpamBanExpiresAt?: number; // Th·ªùi gian h·∫øt h·∫°n ban extended spam
  extendedAttemptsHistory: number[]; // L·ªãch s·ª≠ c√°c l·∫ßn th·ª≠ trong extended window
  // Frequency detection trong extended spam
  extendedTimeIntervals: number[]; // Th·ªùi gian gi·ªØa c√°c l·∫ßn th·ª≠ trong extended window
  frequencySpamWarnings: number; // S·ªë l·∫ßn c·∫£nh c√°o frequency spam
  isFrequencySpamBanned: boolean; // B·ªã ban do frequency spam
  frequencySpamBanExpiresAt?: number; // Th·ªùi gian h·∫øt h·∫°n ban frequency spam
}

export const spamProtectionConfig: SpamProtectionConfig = {
  enabled: true,
  cooldown: 30, // 30 gi√¢y gi·ªØa c√°c l·∫ßn c√¢u c√°
  maxAttempts: 5, // T·ªëi ƒëa 5 l·∫ßn trong timeWindow
  timeWindow: 300, // 5 ph√∫t
  warningThreshold: 3, // C·∫£nh c√°o sau 3 l·∫ßn vi ph·∫°m
  banThreshold: 5, // Ban sau 5 l·∫ßn vi ph·∫°m
  toolSpamDetection: {
    enabled: true,
    minAttempts: 3, // C·∫ßn √≠t nh·∫•t 3 l·∫ßn ƒë·ªÉ ph√°t hi·ªán
    timeTolerance: 2, // ƒê·ªô sai s·ªë 2 gi√¢y
    patternThreshold: 2, // 2 l·∫ßn pattern gi·ªëng nhau = tool spam
    banDuration: 1, // Ban 1 ph√∫t cho tool spam
  },
  extendedSpamMonitoring: {
    enabled: true,
    timeWindow: 300, // 5 ph√∫t = 300 gi√¢y
    maxAttempts: 20, // T·ªëi ƒëa 20 l·∫ßn trong 5 ph√∫t
    warningThreshold: 15, // C·∫£nh c√°o sau 15 l·∫ßn vi ph·∫°m
    banThreshold: 20, // Ban sau 20 l·∫ßn vi ph·∫°m
    banDuration: 1, // Ban 1 ph√∫t cho extended spam
    frequencyDetection: {
      enabled: true,
      minAttempts: 3, // C·∫ßn √≠t nh·∫•t 3 l·∫ßn ƒë·ªÉ ph√°t hi·ªán
      timeTolerance: 2, // ƒê·ªô sai s·ªë 2 gi√¢y
      patternThreshold: 2, // 2 l·∫ßn pattern gi·ªëng nhau = frequency spam
    },
  },
};

export const spamCommands = {
  fishing: {
    name: 'fishing',
    aliases: ['fish', 'c√¢u', 'c√°'],
    cooldown: 30,
    maxAttempts: 5,
    timeWindow: 300,
  },
  battle: {
    name: 'battle',
    aliases: ['ƒë√°nh', 'chi·∫øn'],
    cooldown: 60,
    maxAttempts: 3,
    timeWindow: 600,
  },
  feed: {
    name: 'feed',
    aliases: ['cho ƒÉn', 'ƒÉn'],
    cooldown: 15,
    maxAttempts: 10,
    timeWindow: 300,
  },
};

export const spamMessages = {
  cooldown: "‚è∞ **Cooldown!** B·∫°n c·∫ßn ch·ªù {time} gi√¢y n·ªØa m·ªõi c√≥ th·ªÉ {command}.",
  warning: "‚ö†Ô∏è **C·∫£nh c√°o spam!** B·∫°n ƒë√£ {attempts} l·∫ßn {command} qu√° nhanh. L·∫ßn vi ph·∫°m ti·∫øp theo s·∫Ω b·ªã t·∫°m kh√≥a.",
  ban: "üî® **B·ªã t·∫°m kh√≥a!** B·∫°n ƒë√£ spam {command} qu√° nhi·ªÅu l·∫ßn. T√†i kho·∫£n b·ªã t·∫°m kh√≥a trong {duration} ph√∫t.",
  unbanned: "‚úÖ **ƒê√£ m·ªü kh√≥a!** B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng {command} b√¨nh th∆∞·ªùng.",
  stats: "üìä **Th·ªëng k√™ spam:** {attempts} l·∫ßn trong {timeWindow} gi√¢y",
  // Tool spam messages
  toolSpamWarning: "ü§ñ **C·∫£nh c√°o Tool Spam!** Ph√°t hi·ªán pattern spam t·ª± ƒë·ªông. L·∫ßn vi ph·∫°m ti·∫øp theo s·∫Ω b·ªã t·∫°m kh√≥a.",
  toolSpamBan: "üî® **B·ªã t·∫°m kh√≥a Tool Spam!** Ph√°t hi·ªán s·ª≠ d·ª•ng tool spam t·ª± ƒë·ªông. T√†i kho·∫£n b·ªã t·∫°m kh√≥a trong {duration} ph√∫t.",
  toolSpamDetected: "ü§ñ **Tool Spam Detected!** Pattern: {pattern} gi√¢y ¬± {tolerance} gi√¢y",
  // Extended spam messages
  extendedSpamWarning: "üìä **C·∫£nh c√°o Extended Spam!** B·∫°n ƒë√£ {attempts} l·∫ßn {command} trong 1 ph√∫t. L·∫ßn vi ph·∫°m ti·∫øp theo s·∫Ω b·ªã t·∫°m kh√≥a.",
  extendedSpamBan: "üî® **B·ªã t·∫°m kh√≥a Extended Spam!** B·∫°n ƒë√£ spam {command} qu√° nhi·ªÅu l·∫ßn trong 1 ph√∫t. T√†i kho·∫£n b·ªã t·∫°m kh√≥a trong {duration} ph√∫t.",
  extendedSpamDetected: "üìä **Extended Spam Detected!** {attempts} l·∫ßn trong 5 ph√∫t",
  // Frequency spam messages
  frequencySpamWarning: "‚è±Ô∏è **C·∫£nh c√°o Frequency Spam!** Ph√°t hi·ªán t·∫ßn su·∫•t spam t·ª± ƒë·ªông trong 1 ph√∫t. L·∫ßn vi ph·∫°m ti·∫øp theo s·∫Ω b·ªã t·∫°m kh√≥a.",
  frequencySpamBan: "üî® **B·ªã t·∫°m kh√≥a Frequency Spam!** Ph√°t hi·ªán t·∫ßn su·∫•t spam t·ª± ƒë·ªông trong 1 ph√∫t. T√†i kho·∫£n b·ªã t·∫°m kh√≥a trong {duration} ph√∫t.",
  frequencySpamDetected: "‚è±Ô∏è **Frequency Spam Detected!** Pattern: {pattern} gi√¢y ¬± {tolerance} gi√¢y trong 5 ph√∫t",
};