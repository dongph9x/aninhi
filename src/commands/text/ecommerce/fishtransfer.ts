import { EmbedBuilder } from "discord.js";

import { Bot } from "@/classes";
import { config } from "@/config";
import { fishCoinDB } from "@/utils/fish-coin";

export default Bot.createCommand({
    structure: {
        name: "fishtransfer",
        aliases: ["fishgive", "fishsend", "ft"],
    },
    run: async ({ message, t }) => {
        const userId = message.author.id;
        const guildId = message.guildId!;
        const args = message.content.split(" ").slice(1);

        if (args.length < 2) {
            const helpEmbed = new EmbedBuilder()
                .setTitle("üêü H∆∞·ªõng D·∫´n Chuy·ªÉn FishCoin")
                .setDescription(
                    "**C√∫ ph√°p:** `!fishtransfer @user <s·ªë l∆∞·ª£ng>`\n" +
                    "**V√≠ d·ª•:** `!fishtransfer @username 1000`\n\n" +
                    "**L∆∞u √Ω:**\n" +
                    "‚Ä¢ S·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng\n" +
                    "‚Ä¢ B·∫°n ph·∫£i c√≥ ƒë·ªß FishCoin ƒë·ªÉ chuy·ªÉn\n" +
                    "‚Ä¢ Kh√¥ng th·ªÉ chuy·ªÉn cho ch√≠nh m√¨nh"
                )
                .setColor("#00CED1")
                .setTimestamp();

            return message.reply({ embeds: [helpEmbed] });
        }

        try {
            // L·∫•y user ƒë∆∞·ª£c mention
            const mentionedUser = message.mentions.users.first();
            if (!mentionedUser) {
                const errorEmbed = new EmbedBuilder()
                    .setTitle("‚ùå L·ªói")
                    .setDescription("Vui l√≤ng mention ng∆∞·ªùi nh·∫≠n FishCoin!")
                    .setColor("#ff0000")
                    .setTimestamp();

                return message.reply({ embeds: [errorEmbed] });
            }

            const targetUserId = mentionedUser.id;

            // Ki·ªÉm tra kh√¥ng chuy·ªÉn cho ch√≠nh m√¨nh
            if (targetUserId === userId) {
                const errorEmbed = new EmbedBuilder()
                    .setTitle("‚ùå L·ªói")
                    .setDescription("B·∫°n kh√¥ng th·ªÉ chuy·ªÉn FishCoin cho ch√≠nh m√¨nh!")
                    .setColor("#ff0000")
                    .setTimestamp();

                return message.reply({ embeds: [errorEmbed] });
            }

            // L·∫•y s·ªë l∆∞·ª£ng FishCoin
            const amount = parseInt(args[1]);
            if (isNaN(amount) || amount <= 0) {
                const errorEmbed = new EmbedBuilder()
                    .setTitle("‚ùå L·ªói")
                    .setDescription("S·ªë l∆∞·ª£ng FishCoin ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!")
                    .setColor("#ff0000")
                    .setTimestamp();

                return message.reply({ embeds: [errorEmbed] });
            }

            // Th·ª±c hi·ªán chuy·ªÉn FishCoin
            const result = await fishCoinDB.transferFishCoin(
                userId,
                targetUserId,
                guildId,
                amount,
                `Transfer to ${mentionedUser.username}`
            );

            if (result.success) {
                // L·∫•y th√¥ng tin balance m·ªõi
                const senderBalance = await fishCoinDB.getFishBalance(userId, guildId);
                const receiverBalance = await fishCoinDB.getFishBalance(targetUserId, guildId);

                const successEmbed = new EmbedBuilder()
                    .setTitle("‚úÖ Chuy·ªÉn FishCoin Th√†nh C√¥ng")
                    .setDescription(
                        `**${message.author.username}** ƒë√£ chuy·ªÉn **${amount.toLocaleString()}** FishCoin cho **${mentionedUser.username}**\n\n` +
                        `**S·ªë d∆∞ sau chuy·ªÉn:**\n` +
                        `üêü **${message.author.username}:** ${senderBalance.toLocaleString()} FishCoin\n` +
                        `üêü **${mentionedUser.username}:** ${receiverBalance.toLocaleString()} FishCoin`
                    )
                    .setColor("#00FF00")
                    .setThumbnail(message.author.displayAvatarURL())
                    .setFooter({
                        text: `FishCoin Transfer | ${new Date().toLocaleDateString('vi-VN')}`,
                        iconURL: message.author.displayAvatarURL(),
                    })
                    .setTimestamp();

                return message.reply({ embeds: [successEmbed] });
            } else {
                const errorEmbed = new EmbedBuilder()
                    .setTitle("‚ùå L·ªói Chuy·ªÉn FishCoin")
                    .setDescription(result.message || "C√≥ l·ªói x·∫£y ra khi chuy·ªÉn FishCoin!")
                    .setColor("#ff0000")
                    .setTimestamp();

                return message.reply({ embeds: [errorEmbed] });
            }

        } catch (error) {
            console.error("Error in fishtransfer command:", error);
            
            const errorEmbed = new EmbedBuilder()
                .setTitle("‚ùå L·ªói")
                .setDescription("C√≥ l·ªói x·∫£y ra khi chuy·ªÉn FishCoin!")
                .setColor("#ff0000")
                .setTimestamp();

            return message.reply({ embeds: [errorEmbed] });
        }
    },
}); 