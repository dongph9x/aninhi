import { EmbedBuilder } from "discord.js";

import { Bot } from "@/classes";
import { banDB } from "@/utils/ban-db";

export default Bot.createCommand({
    structure: {
        name: "banlist",
        aliases: ["bans", "banlist", "listbans"],
    },
    options: {
        permissions: ["BanMembers"],
        inGuild: true,
    },
    run: async ({ message, t, args }) => {
        try {
            const guildId = message.guildId!;
            const guildBans = await banDB.getBanList(guildId);

            if (guildBans.length === 0) {
                const embed = new EmbedBuilder()
                    .setTitle("üìã Danh S√°ch Ban")
                    .setDescription("Hi·ªán t·∫°i kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o b·ªã ban trong server n√†y.")
                    .setColor("#51cf66")
                    .setTimestamp();

                return message.reply({ embeds: [embed] });
            }

            // Ph√¢n lo·∫°i ban vƒ©nh vi·ªÖn v√† t·∫°m th·ªùi
            const permanentBans = guildBans.filter(ban => ban.type === "permanent");
            const temporaryBans = guildBans.filter(ban => ban.type === "temporary");

            const embed = new EmbedBuilder()
                .setTitle("üìã Danh S√°ch Ban")
                .setDescription(`T·ªïng c·ªông **${guildBans.length}** ng∆∞·ªùi d√πng b·ªã ban trong server n√†y.`)
                .setColor("#ff6b6b")
                .setTimestamp();

            // Hi·ªÉn th·ªã ban vƒ©nh vi·ªÖn
            if (permanentBans.length > 0) {
                const permanentList = permanentBans
                    .map(ban => {
                        const banDate = new Date(ban.banAt);
                        return `‚Ä¢ <@${ban.userId}> - **${ban.reason}** (Ban b·ªüi <@${ban.moderatorId}> - <t:${Math.floor(ban.banAt.getTime() / 1000)}:R>)`;
                    })
                    .join("\n");

                embed.addFields({
                    name: `üîí Ban Vƒ©nh Vi·ªÖn (${permanentBans.length})`,
                    value: permanentList,
                    inline: false,
                });
            }

            // Hi·ªÉn th·ªã ban t·∫°m th·ªùi
            if (temporaryBans.length > 0) {
                const temporaryList = temporaryBans
                    .map(ban => {
                        const banDate = new Date(ban.banAt);
                        const expiresDate = ban.expiresAt;
                        const timeLeft = expiresDate ? Math.max(0, expiresDate.getTime() - Date.now()) : 0;
                        
                        let status = "";
                        if (timeLeft > 0) {
                            const hours = Math.floor(timeLeft / (1000 * 60 * 60));
                            const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
                            status = `‚è∞ C√≤n ${hours}h ${minutes}m`;
                        } else {
                            status = "üïê ƒê√£ h·∫øt h·∫°n (s·∫Ω t·ª± ƒë·ªông unban)";
                        }

                        return `‚Ä¢ <@${ban.userId}> - **${ban.reason}** (Ban b·ªüi <@${ban.moderatorId}> - ${status})`;
                    })
                    .join("\n");

                embed.addFields({
                    name: `‚è∞ Ban T·∫°m Th·ªùi (${temporaryBans.length})`,
                    value: temporaryList,
                    inline: false,
                });
            }

            embed.setFooter({
                text: `Server: ${message.guild?.name} | Database Version`,
                iconURL: message.guild?.iconURL() || undefined,
            });

            message.reply({ embeds: [embed] });

        } catch (error) {
            console.error("Error in banlist command:", error);

            const errorEmbed = new EmbedBuilder()
                .setTitle("‚ùå L·ªói Khi T·∫£i Danh S√°ch Ban")
                .setDescription(
                    error instanceof Error
                        ? error.message
                        : "ƒê√£ x·∫£y ra l·ªói khi t·∫£i danh s√°ch ban. Vui l√≤ng th·ª≠ l·∫°i sau.",
                )
                .setColor("#ff0000")
                .setTimestamp();

            message.reply({ embeds: [errorEmbed] });
        }
    },
}); 