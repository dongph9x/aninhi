import { EmbedBuilder } from "discord.js";

import { Bot } from "@/classes";
import { WarningService } from "@/utils/warning";

export default Bot.createCommand({
    structure: {
        name: "warnstats",
        aliases: ["warningstats", "th·ªëng k√™ c·∫£nh c√°o", "warnstatistics"],
    },
    options: {
        permissions: ["Administrator"],
        inGuild: true,
    },
    run: async ({ message, t }) => {
        try {
            const guildId = message.guildId!;

            // L·∫•y th·ªëng k√™ c·∫£nh c√°o c·ªßa server
            const stats = await WarningService.getServerWarningStats(guildId);
            const recentWarnings = await WarningService.getServerWarnings(guildId, 10);

            // T·∫°o embed th·ªëng k√™
            const embed = new EmbedBuilder()
                .setTitle("üìä Th·ªëng K√™ C·∫£nh C√°o Server")
                .setDescription(`Th·ªëng k√™ c·∫£nh c√°o c·ªßa **${message.guild?.name}**`)
                .setColor("#51cf66")
                .setTimestamp();

            // Th·ªëng k√™ t·ªïng quan
            embed.addFields({
                name: "üìà Th·ªëng K√™ T·ªïng Quan",
                value: 
                    `üìä **T·ªïng c·∫£nh c√°o:** ${stats.totalWarnings}\n` +
                    `‚ö†Ô∏è **C·∫£nh c√°o active:** ${stats.activeWarnings}\n` +
                    `‚úÖ **T·ª∑ l·ªá active:** ${stats.totalWarnings > 0 ? Math.round((stats.activeWarnings / stats.totalWarnings) * 100) : 0}%`,
                inline: false
            });

            // Th·ªëng k√™ theo level
            if (stats.levelStats && stats.levelStats.length > 0) {
                const levelStatsText = stats.levelStats.map((levelStat: any) => {
                    const levelName = levelStat.warningLevel === 1 ? "‚ö†Ô∏è Level 1" : 
                                    levelStat.warningLevel === 2 ? "üö® Level 2" : 
                                    levelStat.warningLevel === 3 ? "üî® Level 3" : `Level ${levelStat.warningLevel}`;
                    
                    return `${levelName}: **${levelStat._count.warningLevel}**`;
                }).join("\n");

                embed.addFields({
                    name: "üìã Th·ªëng K√™ Theo Level",
                    value: levelStatsText,
                    inline: true
                });
            }

            // C·∫£nh c√°o g·∫ßn ƒë√¢y
            if (recentWarnings.length > 0) {
                const recentWarningsText = recentWarnings.slice(0, 5).map((warning: any) => {
                    const levelEmoji = warning.warningLevel === 1 ? "‚ö†Ô∏è" : warning.warningLevel === 2 ? "üö®" : "üî®";
                    return `${levelEmoji} **Level ${warning.warningLevel}** - <@${warning.userId}>\n` +
                           `üìù ${warning.reason.substring(0, 50)}${warning.reason.length > 50 ? '...' : ''}\n` +
                           `‚è∞ <t:${Math.floor(new Date(warning.createdAt).getTime() / 1000)}:R>`;
                }).join("\n\n");

                embed.addFields({
                    name: "üïê C·∫£nh C√°o G·∫ßn ƒê√¢y",
                    value: recentWarningsText,
                    inline: false
                });
            } else {
                embed.addFields({
                    name: "‚úÖ Kh√¥ng C√≥ C·∫£nh C√°o",
                    value: "Server n√†y kh√¥ng c√≥ c·∫£nh c√°o active n√†o.",
                    inline: false
                });
            }

            // Th√¥ng tin h·ªá th·ªëng
            embed.addFields({
                name: "‚ÑπÔ∏è H·ªá Th·ªëng C·∫£nh C√°o",
                value: 
                    "**Level 1:** C·∫£nh c√°o nh·∫π - C·∫£nh b√°o user\n" +
                    "**Level 2:** C·∫£nh c√°o nghi√™m tr·ªçng - C·∫£nh b√°o m·∫°nh\n" +
                    "**Level 3:** T·ª± ƒë·ªông ban - Ban kh·ªèi server\n\n" +
                    "**L·ªánh li√™n quan:**\n" +
                    "‚Ä¢ `n.warn <user> <reason>` - C·∫£nh c√°o user\n" +
                    "‚Ä¢ `n.warnings <user>` - Xem c·∫£nh c√°o c·ªßa user\n" +
                    "‚Ä¢ `n.clearwarnings <user>` - X√≥a t·∫•t c·∫£ c·∫£nh c√°o\n\n" +
                    "**L∆∞u √Ω:** T·∫•t c·∫£ l·ªánh c·∫£nh c√°o y√™u c·∫ßu quy·ªÅn Administrator.",
                inline: false
            });

            // Footer v·ªõi th√¥ng tin server
            embed.setFooter({
                text: `${message.guild?.name} ‚Ä¢ ${new Date().toLocaleDateString('vi-VN')}`,
                iconURL: message.guild?.iconURL() || undefined
            });

            message.reply({ embeds: [embed] });

        } catch (error) {
            console.error("Error in warnstats command:", error);

            const errorEmbed = new EmbedBuilder()
                .setTitle("‚ùå L·ªói Th·ªëng K√™")
                .setDescription(
                    error instanceof Error
                        ? error.message
                        : "ƒê√£ x·∫£y ra l·ªói khi l·∫•y th·ªëng k√™ c·∫£nh c√°o. Vui l√≤ng th·ª≠ l·∫°i sau.",
                )
                .setColor("#ff0000")
                .setTimestamp();

            message.reply({ embeds: [errorEmbed] });
        }
    },
});